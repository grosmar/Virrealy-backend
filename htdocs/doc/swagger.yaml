swagger: '2.0'
info:
  title: Virrealy API
  version: "1"
host: c6b49d634b.testurl.ws
schemes:
  - http
produces:
  - application/json
paths:
  /sessions:
    get:
      summary: Get all of the session list.
      responses:
        200:
          description: The full of list the session.
          schema:
            type: array
            items:
              $ref: '#/definitions/Session'
        204:
          description: No Content - Sessions does not exists.
        500:
          description: Internal Server Error - General (database) error.
      tags:
        - sessions
    post:
      summary: It initializes a game session and return with the identification of the session.
      parameters:
        - name: gameId
          in: formData
          description: The ID of game.
          required: true
          type: integer
      responses:
        201:
          description: The game session has been created.
          schema:
            type: array
            items:
              $ref: '#/definitions/sessionId'
        400:
          description: Bad Request - Invalid or missing parameter.
        500:
          description: Internal Server Error - General (database) error.
      tags:
        - sessions

  /sessions/{sessionId}:
    get:
      summary: It returns with the game session information.
      parameters:
        - name: sessionId
          in: path
          description: The ID of session.
          required: true
          type: integer
      responses:
        200:
          description: The given session configuration.
          schema:
            type: array
            items:
              $ref: '#/definitions/SessionStage'
        204:
          description: No Content - The given session does not exist.
        500:
          description: Internal Server Error - General (database) error.
      tags:
        - sessions

  /sessions/{sessionId}/stages/{stageId}:
    post:
      summary: Validates the given answer and saves the current status.
      parameters:
        - name: sessionId
          in: path
          description: The id of session.
          required: true
          type: integer
        - name: stageId
          in: path
          description: The id of stage.
          required: true
          type: integer
        - name: answer
          in: formData
          required: true
          type: string
      responses:
        200:
          description: The given answer is valid or not.
          schema:
            type: boolean
        400:
          description: Bad Request - Invalid or missing parameter.
        500:
          description: Internal Server Error - General (database) error.
      tags:
        - sessions

  /stages:
      get:
        summary: Get the list of all stages.
        responses:
          200:
            description: The full of list for stages.
            schema:
              type: array
              items:
                $ref: '#/definitions/Stage'
          204:
            description: No Content - The stages does not configured.
          500:
            description: Internal Server Error - General (database) error.
        tags:
          - stages

      post:
        summary: It creates a new stage.
        parameters:
          - name: stageType
            in: formData
            description: The type of the stage.
            required: true
            type: string
            enum:
              - PASSWORD
              - GPS
              - PATH_FINDER
              - AUGMENTED_REALITY
          - name: information
            in: formData
            description: The given stage information to display.
            required: true
            type: string
          - name: validationType
            in: formData
            description: The type of the validation.
            required: true
            type: string
            enum:
              - TEXT
              - GPS
              - NO
          - name: answer
            in: formData
            description: The secret answer.
            type: string
        responses:
          201:
            description: The stage has been created.
            schema:
              type: array
              items:
                $ref: '#/definitions/stageId'
          400:
            description: Bad Request - Invalid or missing parameter.
          500:
            description: Internal Server Error - General (database) error.
        tags:
          - stages

  /stages/{stageId}:
      get:
        summary: It returns with the given stage information.
        parameters:
          - name: stageId
            in: path
            description: The ID of stage.
            required: true
            type: integer
        responses:
          200:
            description: The given stage information.
            schema:
              type: array
              items:
                $ref: '#/definitions/Stage'
          400:
            description: Bad Request - Invalid or missing parameter.
          500:
            description: Internal Server Error - General (database) error.
        tags:
          - stages

  /games:
    get:
      summary: Get the list of games.
      responses:
        200:
          description: The list of games.
          schema:
            type: array
            items:
              $ref: '#/definitions/Game'
        204:
          description: No Content - The games does not configured.
        500:
          description: Internal Server Error - General (database) error.
      tags:
        - games
    post:
      summary: It creates a new game.
      parameters:
        - name: name
          in: formData
          description: The fantasy name of the game.
          required: true
          type: string
      responses:
        201:
          description: The game has been created.
          schema:
            type: array
            items:
              $ref: '#/definitions/gameId'
        400:
          description: Bad Request - Invalid or missing parameter.
        500:
          description: Internal Server Error - General (database) error.
      tags:
        - games

  /games/{gameId}/stages/{stageId}:
    post:
      summary: Add an existing stage to an existing game.
      parameters:
        - name: gameId
          in: path
          description: The ID of game.
          required: true
          type: integer
        - name: stageId
          in: path
          description: The ID of stage.
          required: true
          type: integer
        - name: order
          in: query
          description: The order number of the stage.
          type: integer
      responses:
        200:
          description: The stage has been added to game.
        400:
          description: Bad Request - Invalid or missing parameter.
        404:
          description: Not Found - The given resource not found.
        500:
          description: Internal Server Error - General (database) error.
      tags:
        - games

definitions:
  sessionId:
    type: object
    properties:
      sessionId:
        type: integer

  stageId:
    type: object
    properties:
      stageId:
        type: integer

  gameId:
    type: object
    properties:
      gameId:
        type: integer

  Session:
    type: object
    properties:
      sessionId:
        type: integer
      gameId:
        type: integer
      createdAt:
        type: string

  Game:
    type: object
    properties:
      gameId:
        type: integer
      name:
        type: string

  SessionStage:
      type: object
      properties:
        sessionId:
          type: integer
        gameId:
          type: integer
        stages:
          type: array
          items:
            $ref: '#/definitions/Stage'

  Stage:
    type: object
    properties:
      stageId:
        type: integer
      stageType:
        type: string
      information:
        type: string
      answer:
        type: string
      validationType:
        type: string